// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.
$baseline-px: 10px;

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem;
  // Print the first line in pixel values
  #{$property}: $px-values;
  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
	#{$property}: $px-values / $baseline-rem; }
  @else {
	// Create an empty list that we can dump values into
	$rem-values: unquote("");
	@each $value in $px-values {
	  // If the value is zero, return 0
	  @if $value == 0 {
		$rem-values: append($rem-values, $value); }
	  @else {
		$rem-values: append($rem-values, $value / $baseline-rem); } }
	// Return the property and its list of converted values
	#{$property}: $rem-values; } }


@mixin font-size($px-value){
  @include rem('font-size',$px-value);
}











/* ***** Colors ***** */

$text_primary: #666;
$text_secondary: lighten(#666,5%);
$text_light: #aaa;
$text_link: lighten($text_primary,20%);
$text_link_active: salmon;

$background: #f1f1e8;

$font_primary : 'Raleway', sans-serif;;
$font_secondary : 'habibi', serif;
$font_tertiary : 'habibi', sans-serif;


.alpha   {
	@include font-size(21px);
  @include x-small {
    @include font-size(17px);
  }
	@include small-only {
		@include font-size(19px);
	}
}
.beta    {
  @include font-size(19px);
  @include small-only {
    @include font-size(21px);
  }
}
.gamma   { @include font-size(17px); }
.delta   { @include font-size(15px); }
.epsilon { @include font-size(12px); }
.zeta    { @include font-size(10px); }


%element-heading
{
  @extend .beta;
  @include rem('padding-bottom',11px);
  @include rem('margin-bottom',24px);
  border-bottom: 1px solid #DDD;
  color: $text_primary;
  font-family: $font_secondary;
}

%element-caption {
  @extend .beta;
  font-weight: normal;
  color: $text_primary;
}

%element-content {
  color: $text_secondary;
  @extend .gamma;
}

