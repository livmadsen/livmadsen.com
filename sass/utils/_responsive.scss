$usemediaqueries: true;

$xsmall_max: 500px;
$small_max: 800px;
$medium_max: 1100px;
$large_max: 1500px;
$xlarge_max: 1800px;

$small_min: $xsmall_max + 1;
$medium_min: $small_max + 1;
$large_min: $medium_max + 1;
$xlarge_min: $large_max + 1;
$xxlarge_min: $xlarge_max + 1;

// ===============================
// The basic respond-to mixin
// ===============================

@mixin respond-to($media) {

	// Sizes
	@if $media == x-small {
		@media only screen and (max-width: $xsmall_max) { @content; }
	}
	@else if $media == small {
		@media only screen and (max-width: $small_max) { @content; }
	}
	@else if $media == small-only {
		@media only screen and (min-width: $small_min) and (max-width: $small_max) { @content; }
	}
	@else if $media == medium {
		@media only screen and (min-width: $medium_min) { @content; }
	}
	@else if $media == medium-only {
		@media only screen and (min-width: $medium_min) and (max-width: $medium_max) { @content; }
	}
	@else if $media == large {
		@media only screen and (min-width: $large_min) { @content; }
	}
	@else if $media == large-only {
		@media only screen and (min-width: $large_min) and (max-width: $large_max) { @content; }
	}
	@else if $media == x-large {
		@media only screen and (min-width: $xlarge_min) { @content; }
	}
	@else if $media == x-large-only {
		@media only screen and (min-width: $xlarge_min) and (max-width: $xlarge_max) { @content; }
	}
	@else if $media == xx-large {
		@media only screen and (min-width: $xxlarge_min) { @content; }
	}

	// Pixel density
	@else if $media == retina {
		@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
		only screen and (min-device-pixel-ratio: 1.5) { @content; }
	}

	// Orientation
	@else if $media == orientation-portrait {
		@media only screen and (orientation: portrait) { @content; }
	}
	@else if $media == orientation-landscape {
		@media only screen and (orientation: landscape) { @content; }
	}
}

@import "facades";